{"version":3,"sources":["logo.svg","components/imagecards/image.js","components/Galley-Folders/folder.js","components/gallery/gallery.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ImageCard","props","currentAddress","src","className","value","id","onClick","event","WhenClicked","id2","style","color","aria-hidden","GalleryFolder","useEffect","xy","document","getElementById","Images","length","display","name","When","map","b","index","key","Math","random","delete","Gallery","FolderSelect","val","target","lol","state","Folders","push","setState","localStorage","setItem","JSON","stringify","closeModal2","onaddFolder","FolderName","f","Object","keys","find","x","alert","console","log","closeModal","onaddressChange","ondelete","event1","event2","vt","splice","FolderDelete","pro","window","confirm","render","class","onChange","type","placeholder","openModal2","openModal","visible","visible2","width","height","effect","onClickAway","fol","Fol","rememberMe","parse","getItem","this","isimage","fetch","method","then","res","ok","catch","err","String","fromCodePoint","React","Component","App","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.37bc8c40.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\nimport \"./style.css\";\r\nconst ImageCard = (props) => {\r\n  const myfucn = (event) => {\r\n    props.WhenClicked(props.id, props.id2);\r\n  };\r\n  if (props.currentAddress !== \"\") {\r\n    return (\r\n      <div>\r\n        <img src={props.currentAddress} />\r\n        <button className=\"btn\" value={props.id} onClick={myfucn}>\r\n          <i\r\n            style={{ color: \"#f5f5f5\" }}\r\n            className=\"fa fa-trash fa-2x\"\r\n            aria-hidden=\"true\"\r\n          ></i>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default ImageCard;\r\n","import React, { useEffect } from \"react\";\r\nimport ImageCard from \"../imagecards/image.js\";\r\nimport \"./style.css\";\r\nconst GalleryFolder = (props) => {\r\n  const myfuc = (event) => {\r\n    props.When(props.name);\r\n  };\r\n  useEffect(() => {\r\n    const xy = document.getElementById(\"NO\");\r\n    if (props.Images.length != 0) {\r\n      xy.style.display = \"none\";\r\n    }\r\n  });\r\n  return (\r\n    <div className=\"folder\">\r\n      <section>\r\n        <h3>{props.name}</h3>\r\n\r\n        <i\r\n          id=\"i2\"\r\n          style={{ color: \"#000\" }}\r\n          className=\"fa fa-trash fa-2x\"\r\n          aria-hidden=\"true\"\r\n          onClick={myfuc}\r\n        ></i>\r\n        <i\r\n          id=\"NO\"\r\n          style={{ color: \"#cbcbcb\" }}\r\n          className=\"fa fa-file-image-o fa-5x\"\r\n          aria-hidden=\"true\"\r\n        ></i>\r\n      </section>\r\n      <div className=\"cards\">\r\n        {props.Images.map((b, index) => {\r\n          return (\r\n            <ImageCard\r\n              key={Math.random() * 100}\r\n              id={props.name}\r\n              id2={index}\r\n              currentAddress={b}\r\n              WhenClicked={props.delete}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GalleryFolder;\r\n","import React from \"react\";\r\n\r\nimport \"./style.css\";\r\nimport Modal from \"react-awesome-modal\";\r\nimport Rodal from \"rodal\";\r\nimport GalleryFolder from \"../Galley-Folders/folder.js\";\r\n// include styles\r\n\r\nclass Gallery extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.rememberMe = JSON.parse(localStorage.getItem(\"Folder\"));\r\n    if (this.rememberMe) {\r\n      this.state = {\r\n        currentAddress: \"\",\r\n        visible: false,\r\n        visible2: false,\r\n        Folders: this.rememberMe,\r\n      };\r\n    } else {\r\n      this.state = {\r\n        currentAddress: \"\",\r\n        visible: false,\r\n        visible2: false,\r\n        Folders: {},\r\n      };\r\n    }\r\n  }\r\n  openModal() {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  }\r\n\r\n  closeModal() {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  }\r\n\r\n  openModal2() {\r\n    if (!this.state.currentAddress) {\r\n      alert(`Please Enter Url ${String.fromCodePoint(128554)}`);\r\n      return;\r\n    }\r\n    let isimage = 0;\r\n    fetch(this.state.currentAddress, { method: \"HEAD\" })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          if (Object.keys(this.state.Folders).length === 0) {\r\n            this.openModal();\r\n            return;\r\n          }\r\n\r\n          this.setState({\r\n            visible2: true,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        isimage = 1;\r\n        console.log(\"dverg\");\r\n        this.setState({\r\n          currentAddress: \" \",\r\n        });\r\n        if (isimage == 1) {\r\n          console.log(\"came\");\r\n          alert(`Url Does not Exist..${String.fromCodePoint(128549)}`);\r\n          return;\r\n        }\r\n      });\r\n    if (Object.keys(this.state.Folders).length === 0) {\r\n      this.setState({\r\n        visible: true,\r\n      });\r\n      return;\r\n    }\r\n    this.setState({\r\n      visible2: true,\r\n    });\r\n  }\r\n\r\n  closeModal2() {\r\n    this.setState({\r\n      visible2: false,\r\n    });\r\n  }\r\n\r\n  FolderSelect = (event) => {\r\n    const val = event.target.id;\r\n    const lol = { ...this.state.Folders };\r\n\r\n    lol[val].push(this.state.currentAddress);\r\n\r\n    this.setState({\r\n      Folders: lol,\r\n      currentAddress: \"\",\r\n    });\r\n    localStorage.setItem(\"Folder\", JSON.stringify(lol));\r\n\r\n    this.closeModal2();\r\n  };\r\n  onaddFolder = (event) => {\r\n    const FolderName = document.getElementById(\"input-folder\").value;\r\n\r\n    const f = { ...this.state.Folders };\r\n\r\n    if (!FolderName) {\r\n      alert(\"Please Enter Valid Folder Name\");\r\n      return;\r\n    }\r\n    if (\r\n      Object.keys(f).find((x) => {\r\n        return x == FolderName;\r\n      })\r\n    ) {\r\n      alert(\"Please Enter Other Name\");\r\n      return;\r\n    }\r\n\r\n    f[FolderName] = [];\r\n    if (Object.keys(f).length === 1 && this.state.currentAddress) {\r\n      f[FolderName].push(this.state.currentAddress);\r\n    }\r\n    this.setState({\r\n      Folders: f,\r\n      currentAddress: \"\",\r\n    });\r\n    console.log(f);\r\n    localStorage.setItem(\"Folder\", JSON.stringify(f));\r\n\r\n    this.closeModal();\r\n    document.getElementById(\"input-folder\").value = \"\";\r\n  };\r\n\r\n  onaddressChange = (event) => {\r\n    this.setState({\r\n      currentAddress: event.target.value,\r\n    });\r\n  };\r\n  ondelete = (event1, event2) => {\r\n    console.log(event1, event2);\r\n    let vt = { ...this.state.Folders };\r\n\r\n    vt[event1].splice(event2, 1);\r\n    this.setState({\r\n      Folders: vt,\r\n    });\r\n    localStorage.setItem(\"Folder\", JSON.stringify(vt));\r\n  };\r\n  FolderDelete = (event) => {\r\n    const pro = { ...this.state.Folders };\r\n\r\n    if (pro[event].length != 0) {\r\n      if (\r\n        window.confirm(\"Do you Really Want To Permanently Delete The Folder\")\r\n      ) {\r\n        delete pro[event];\r\n        this.setState({\r\n          Folders: pro,\r\n        });\r\n        localStorage.setItem(\"Folder\", JSON.stringify(pro));\r\n      }\r\n    } else {\r\n      delete pro[event];\r\n      this.setState({\r\n        Folders: pro,\r\n      });\r\n      localStorage.setItem(\"Folder\", JSON.stringify(pro));\r\n    }\r\n  };\r\n  render = () => {\r\n    return (\r\n      <div className=\"root-container\">\r\n        <p className=\"heading\">\r\n          <div class=\"clip-text clip-text_one\">Image Gallery</div>\r\n        </p>\r\n        <div className=\"input-box\">\r\n          <input\r\n            onChange={this.onaddressChange}\r\n            value={this.state.currentAddress}\r\n            type=\"text\"\r\n            className=\"enter\"\r\n            placeholder=\"Enter Image Url\"\r\n          ></input>\r\n          <button onClick={() => this.openModal2()} className=\"add-btn\">\r\n            Add\r\n          </button>\r\n          <button onClick={() => this.openModal()} className=\"add-btn-2\">\r\n            Create New Folder\r\n          </button>\r\n          <Modal\r\n            visible={this.state.visible2}\r\n            width=\"400\"\r\n            height=\"330\"\r\n            effect=\"fadeInLeft\"\r\n            onClickAway={() => this.closeModal2()}\r\n            className=\"Modal2\"\r\n          >\r\n            <div className=\"add-btn-div\">\r\n              <h3>Add to...</h3>\r\n              <div className=\"content\">\r\n                <ul id=\"list\">\r\n                  {Object.keys(this.state.Folders).map((fol) => {\r\n                    return (\r\n                      <li className=\"item\" id={fol} onClick={this.FolderSelect}>\r\n                        <i class=\"fa fa-folder fa-2x\"></i>\r\n                        <p>{fol}</p>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n\r\n          <Modal\r\n            visible={this.state.visible}\r\n            width=\"400\"\r\n            height=\"150\"\r\n            effect=\"fadeInDown\"\r\n            onClickAway={() => this.closeModal()}\r\n            className=\"Modal\"\r\n          >\r\n            <div className=\"create\">\r\n              <input\r\n                id=\"input-folder\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Folder Name\"\r\n                className=\"enter2\"\r\n              ></input>\r\n\r\n              <i\r\n                onClick={this.onaddFolder}\r\n                className=\"fa fa-folder-open fa-2x\"\r\n                aria-hidden=\"true\"\r\n              ></i>\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n        <div className=\"cards\">\r\n          {Object.keys(this.state.Folders).map((Fol) => {\r\n            return (\r\n              <GalleryFolder\r\n                delete={this.ondelete}\r\n                Images={this.state.Folders[Fol]}\r\n                name={Fol}\r\n                When={this.FolderDelete}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Gallery;\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Gallery from './components/gallery/gallery.js'\nfunction App() {\n  return <Gallery/>\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'font-awesome/css/font-awesome.min.css'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}