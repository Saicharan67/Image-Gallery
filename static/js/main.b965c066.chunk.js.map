{"version":3,"sources":["logo.svg","components/imagecards/image.js","components/Galley-Folders/folder.js","components/gallery/gallery.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ImageCard","props","currentAddress","src","className","value","id","onClick","event","WhenClicked","id2","style","color","aria-hidden","GalleryFolder","name","When","Images","map","b","index","key","Math","random","delete","Gallery","FolderSelect","val","target","lol","state","Folders","push","setState","localStorage","setItem","JSON","stringify","closeModal2","onaddFolder","FolderName","document","getElementById","f","Object","keys","find","x","alert","length","console","log","closeModal","onaddressChange","ondelete","event1","event2","vt","splice","FolderDelete","pro","window","confirm","render","onChange","type","placeholder","openModal2","openModal","visible","visible2","width","height","effect","onClickAway","fol","class","Fol","rememberMe","parse","getItem","this","React","Component","App","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b965c066.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\nimport \"./style.css\";\r\nconst ImageCard = (props) => {\r\n  const myfucn = (event) => {\r\n    props.WhenClicked(props.id, props.id2);\r\n  };\r\n  if (props.currentAddress !== \"\") {\r\n    return (\r\n      <div>\r\n        <img src={props.currentAddress} />\r\n        <button className=\"btn\" value={props.id} onClick={myfucn}>\r\n          <i\r\n            style={{ color: \"#f5f5f5\" }}\r\n            className=\"fa fa-trash fa-2x\"\r\n            aria-hidden=\"true\"\r\n          ></i>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default ImageCard;\r\n","import React from \"react\";\r\nimport ImageCard from \"../imagecards/image.js\";\r\nimport \"./style.css\";\r\nconst GalleryFolder = (props) => {\r\n  const myfuc = (event) => {\r\n    props.When(props.name);\r\n  };\r\n  return (\r\n    <div className=\"folder\">\r\n      <section>\r\n        <h3>{props.name}</h3>\r\n\r\n        <i\r\n          id=\"i2\"\r\n          style={{ color: \"#000\" }}\r\n          className=\"fa fa-trash fa-2x\"\r\n          aria-hidden=\"true\"\r\n          onClick={myfuc}\r\n        ></i>\r\n      </section>\r\n      <div className=\"cards\">\r\n        {props.Images.map((b, index) => {\r\n          return (\r\n            <ImageCard\r\n              key={Math.random() * 100}\r\n              id={props.name}\r\n              id2={index}\r\n              currentAddress={b}\r\n              WhenClicked={props.delete}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GalleryFolder;\r\n","import React from \"react\";\r\n\r\nimport \"./style.css\";\r\nimport Modal from \"react-awesome-modal\";\r\nimport Rodal from \"rodal\";\r\nimport GalleryFolder from \"../Galley-Folders/folder.js\";\r\n// include styles\r\n\r\nclass Gallery extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.rememberMe = JSON.parse(localStorage.getItem(\"Folder\"));\r\n    if (this.rememberMe) {\r\n      this.state = {\r\n        currentAddress: \"\",\r\n        visible: false,\r\n        visible2: false,\r\n        Folders: this.rememberMe,\r\n      };\r\n    } else {\r\n      this.state = {\r\n        currentAddress: \"\",\r\n        visible: false,\r\n        visible2: false,\r\n        Folders: {},\r\n      };\r\n    }\r\n    // localStorage.clear();\r\n    // this.state = {\r\n    //   currentAddress: \"\",\r\n    //   visible: false,\r\n    //   visible2: false,\r\n    //   Folders: {},\r\n    // };\r\n  }\r\n  openModal() {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  }\r\n\r\n  closeModal() {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  }\r\n  openModal2() {\r\n    if (!this.state.currentAddress) {\r\n      alert(\"Please Enter Url\");\r\n      return;\r\n    }\r\n    if (Object.keys(this.state.Folders).length === 0) {\r\n      this.openModal();\r\n      return;\r\n    }\r\n    console.log(this.state.Folders);\r\n    this.setState({\r\n      visible2: true,\r\n    });\r\n  }\r\n\r\n  closeModal2() {\r\n    this.setState({\r\n      visible2: false,\r\n    });\r\n  }\r\n\r\n  FolderSelect = (event) => {\r\n    const val = event.target.id;\r\n    const lol = { ...this.state.Folders };\r\n\r\n    lol[val].push(this.state.currentAddress);\r\n\r\n    this.setState({\r\n      Folders: lol,\r\n      currentAddress: \"\",\r\n    });\r\n    localStorage.setItem(\"Folder\", JSON.stringify(lol));\r\n\r\n    this.closeModal2();\r\n  };\r\n  onaddFolder = (event) => {\r\n    const FolderName = document.getElementById(\"input-folder\").value;\r\n\r\n    const f = { ...this.state.Folders };\r\n\r\n    if (!FolderName) {\r\n      alert(\"Please Enter Valid Folder Name\");\r\n      return;\r\n    }\r\n    if (\r\n      Object.keys(f).find((x) => {\r\n        return x == FolderName;\r\n      })\r\n    ) {\r\n      alert(\"Please Enter Other Name\");\r\n      return;\r\n    }\r\n\r\n    f[FolderName] = [];\r\n    if (Object.keys(f).length === 1 && this.state.currentAddress) {\r\n      f[FolderName].push(this.state.currentAddress);\r\n    }\r\n    this.setState({\r\n      Folders: f,\r\n      currentAddress: \"\",\r\n    });\r\n    console.log(f);\r\n    localStorage.setItem(\"Folder\", JSON.stringify(f));\r\n\r\n    this.closeModal();\r\n    document.getElementById(\"input-folder\").value = \"\";\r\n  };\r\n\r\n  onaddressChange = (event) => {\r\n    this.setState({\r\n      currentAddress: event.target.value,\r\n    });\r\n  };\r\n  ondelete = (event1, event2) => {\r\n    console.log(event1, event2);\r\n    let vt = { ...this.state.Folders };\r\n\r\n    vt[event1].splice(event2, 1);\r\n    this.setState({\r\n      Folders: vt,\r\n    });\r\n    localStorage.setItem(\"Folder\", JSON.stringify(vt));\r\n  };\r\n  FolderDelete = (event) => {\r\n    const pro = { ...this.state.Folders };\r\n\r\n    if (pro[event].length != 0) {\r\n      if (\r\n        window.confirm(\"Do you Really Want To Permanently Delete The Folder\")\r\n      ) {\r\n        delete pro[event];\r\n        this.setState({\r\n          Folders: pro,\r\n        });\r\n        localStorage.setItem(\"Folder\", JSON.stringify(pro));\r\n      }\r\n    } else {\r\n      delete pro[event];\r\n      this.setState({\r\n        Folders: pro,\r\n      });\r\n      localStorage.setItem(\"Folder\", JSON.stringify(pro));\r\n    }\r\n  };\r\n  render = () => {\r\n    return (\r\n      <div className=\"root-container\">\r\n        <p className=\"title\">......Image Gallery......</p>\r\n        <div className=\"input-box\">\r\n          <input\r\n            onChange={this.onaddressChange}\r\n            value={this.state.currentAddress}\r\n            type=\"text\"\r\n            placeholder=\"Enter Image Url\"\r\n          ></input>\r\n          <button onClick={() => this.openModal2()} className=\"add-btn\">\r\n            Add\r\n          </button>\r\n          <button onClick={() => this.openModal()} className=\"add-btn-2\">\r\n            Create New Folder\r\n          </button>\r\n          <Modal\r\n            visible={this.state.visible2}\r\n            width=\"400\"\r\n            height=\"330\"\r\n            effect=\"fadeInLeft\"\r\n            onClickAway={() => this.closeModal2()}\r\n            className=\"Modal2\"\r\n          >\r\n            <div className=\"add-btn-div\">\r\n              <h3>Add to...</h3>\r\n              <div className=\"content\">\r\n                <ul id=\"list\">\r\n                  {Object.keys(this.state.Folders).map((fol) => {\r\n                    return (\r\n                      <li className=\"item\" id={fol} onClick={this.FolderSelect}>\r\n                        <i class=\"fa fa-folder fa-2x\"></i>\r\n                        <p>{fol}</p>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n\r\n          <Modal\r\n            visible={this.state.visible}\r\n            width=\"400\"\r\n            height=\"150\"\r\n            effect=\"fadeInDown\"\r\n            onClickAway={() => this.closeModal()}\r\n            className=\"Modal\"\r\n          >\r\n            <div className=\"create\">\r\n              <input\r\n                id=\"input-folder\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Folder Name\"\r\n              ></input>\r\n              <button onClick={this.onaddFolder} className=\"add-btn\">\r\n                Add Folder\r\n              </button>\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n        <div className=\"cards\">\r\n          {Object.keys(this.state.Folders).map((Fol) => {\r\n            return (\r\n              <GalleryFolder\r\n                delete={this.ondelete}\r\n                Images={this.state.Folders[Fol]}\r\n                name={Fol}\r\n                When={this.FolderDelete}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Gallery;\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Gallery from './components/gallery/gallery.js'\nfunction App() {\n  return <Gallery/>\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'font-awesome/css/font-awesome.min.css'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}